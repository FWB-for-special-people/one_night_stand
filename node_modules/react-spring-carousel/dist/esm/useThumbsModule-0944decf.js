import{useRef as e,useEffect as n,useLayoutEffect as t}from"react";import{Subject as r}from"rxjs";import o from"screenfull";import{jsx as i}from"react/jsx-runtime";import{useSpring as s,animated as u}from"react-spring";function c(){const t=e(new r);return{useListenToCustomEvent:function(e){n((()=>{const n=t.current.subscribe(e);return()=>n.unsubscribe()}),[e])},emitObservable:e=>{t.current.next(e)}}}const l="undefined"!=typeof window?t:n;function f(n){const t=e(!1);l((()=>{if(!t.current){const e=n();return t.current=!0,()=>{e&&e()}}}),[])}function a({mainCarouselWrapperRef:n,emitObservable:t,handleResize:r}){const i=e(!1);function s(e){i.current=e}return f((()=>{function e(){document.fullscreenElement&&(s(!0),t({eventName:"onFullscreenChange",isFullscreen:!0}),r&&r()),document.fullscreenElement||(s(!1),t({eventName:"onFullscreenChange",isFullscreen:!1}),r&&r())}if(o.isEnabled)return o.on("change",e),()=>{o.isEnabled&&o.off("change",e)}})),{enterFullscreen:function(e){o.isEnabled&&o.request(e||n.current)},exitFullscreen:function(){o.isEnabled&&o.exit()},getIsFullscreen:function(){return i.current}}}function m({items:n,withThumbs:t,thumbsSlideAxis:r="x",springConfig:o,prepareThumbsData:c,getFluidWrapperScrollValue:l=(()=>0),getSlideValue:a=(()=>0),slideType:m}){const h=e(null),[p,d]=s((()=>({x:0,y:0,config:o,onChange:({value:e})=>{h.current&&"fluid"===m&&(h.current["x"===r?"scrollLeft":"scrollTop"]=Math.abs(e[r]))}})));function b(){return h.current["x"===r?"scrollLeft":"scrollTop"]}function g(){var e;return Math.round(Number(null===(e=h.current)||void 0===e?void 0:e["x"===r?"scrollWidth":"scrollHeight"])-h.current.getBoundingClientRect()["x"===r?"width":"height"])}function x(){const e=Math.round(l()/a());return g()/e}f((()=>{if(t&&!h.current)throw new Error("The thumbs wrapper is not defined. If you've passed a Functional component, be sure to wrap your component in forwardRef.")}));return{thumbsFragment:t?i(u.div,Object.assign({ref:h,className:"use-spring-carousel-thumbs-wrapper",onWheel:()=>{p[r].stop()},style:Object.assign({display:"flex",flex:1,position:"relative",width:"100%",height:"100%",flexDirection:"x"===r?"row":"column"},"x"===r?{overflowX:"auto"}:{overflowY:"auto",maxHeight:"100%"})},{children:function(){function e(e){return e.map((e=>({id:e.id,renderThumb:e.renderThumb})))}return c?c(e(n)):e(n)}().map((({id:e,renderThumb:n})=>{const t=`thumb-${e}`;return i("div",Object.assign({id:t,className:"thumb-item"},{children:n}),t)}))})):null,handleThumbsScroll:function(e,t){if("fluid"===m){const e=g();if("next"===t){const n=b()+x();d.start({from:{[r]:b()},to:{[r]:n>e?e:n}})}if("prev"===t){const e=b()-x();d.start({from:{[r]:b()},to:{[r]:e<0?0:e}})}}else{const o=h.current.querySelector(`#thumb-${n[e].id}`);if(o){const i=h.current,s="x"===r?"offsetWidth":"offsetHeight",u="x"===r?"scrollLeft":"scrollTop",c=function({thumbNode:e,offsetDirection:n,offsetDimension:t}){return e[n]+e[t]/2}({thumbNode:o,offsetDimension:s,offsetDirection:"x"===r?"offsetLeft":"offsetTop"}),l=function({thumbWrapper:e,offsetDimension:n}){return e[n]/2}({thumbWrapper:i,offsetDimension:s}),f=function({thumbWrapper:e,scrollDirection:n}){return e[n]}({thumbWrapper:i,scrollDirection:u}),a=function({thumbWrapper:t,thumbOffsetPosition:o,thumbScrollDimension:i,offsetDimension:s}){const u="x"===r?"scrollWidth":"scrollHeight";return e===n.length-1||o-i>t[u]-t[s]?t[u]-t[s]:0===e?0:o-i}({thumbWrapper:i,thumbOffsetPosition:c,thumbScrollDimension:l,offsetDimension:s});d.start({from:{[r]:f},to:{[r]:"prev"===t&&a<0?0:a},onChange:({value:e})=>{"x"===r?h.current.scrollLeft=e.x:h.current.scrollTop=e.y}})}}}}}export{c as a,a as b,m as c,f as d,l as u};
//# sourceMappingURL=useThumbsModule-0944decf.js.map
