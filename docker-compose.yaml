services:
  api:
    build:
      context: ./api
      target: development
    env_file:
      - ./envs/api.env
      - ./envs/postgres.env
    depends_on:
      - postgres
    networks:
      - postgres_network
      - api_network
    ports:
      - "8000:8000"
    restart: on-failure
    volumes:
      - ./api:/app

  postgres:
    image: postgres:16.0
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    env_file:
      - ./envs/postgres.env
    ports:
      - "5433:5432"
    networks:
      - postgres_network

  proxy:
    build:
      context: proxy
    ports:
      - "80:80"
    restart: on-failure
    networks:
      - api_network
      - app_network
    depends_on:
      - api
      - app

  app:
    build:
      context: ./app
      dockerfile: ./Dockerfile
      target: development
    working_dir: /app
    ports:
      - "5173:5173"
    networks:
      - app_network
    env_file:
      - ./envs/api.env
    volumes:
      - ./app:/app
      - node_modules:/app/node_modules
    restart: on-failure
    command: npm run dev


volumes:
  postgres_volume:
  node_modules:

networks:
  postgres_network:
    driver: bridge
  api_network:
    driver: bridge
  app_network:
    driver: bridge
